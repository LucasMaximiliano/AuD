/* PSEUDOCODE:
 * a)
 * get(ptr,value)
 *      if ptr == NULL
 *          return
 *      else
 *          return (ptr.c)*pow(x,ptr.i) + get(ptr->next,value)
 * b)
 * equal(p1,p2)
 *      
 * c)
 * sum(p1,p2)
 */

#include <stdio.h>

class Polynom
{
    public:
        //Liste
        PolynomNode* p = NULL;
        //Methoden
        double get(int x) { get(x,p); }
    private:
        double get(int x, PolynomNode* &ptr)
        {
            if(ptr==NULL)
                return
            else
                return (ptr.c)*pow(x,ptr.i) + get(ptr->next,x);
        }

};

struct PolynomNode
{
    //Elemente
    int c = 0;
    int i = 0;
    PolynomNode* next = NULL;
    //Konstruktor
    PolynomNode(int c_val, int i_val) {c = c_val; i = i_val;}
};

int main()
{
    
    
    return 0;
}